-------------------------------

- added Single-use paks to extras Tools (Add/Remove MiniUI Boot Logo and Update Boot Command)
- fixed swapfile disabled after use
- added more accurate battery logic  (thanks Totofaki!)
- fixed crash in native scaler caused by portrait resolutions with landscape aspect (eg. Tekken 3)

-------------------------------

- change st8 ERROR to WARNING or INFO
- BUG: vectorman 1 and 2 fail to load on MiniUI
- BUG: battery icon is still doing some weird stuff
	jumping from <=10 to >90
	scanline pixels getting stuck when exiting the menu after opening while <=10
	flicking on and off around the threshhold
	/tmp/battery might be writing "09" "01"
		I definitely saw "00"
		could that be causing the jump to >90?
	can still jump over 100 somehow
		480
		450
		oh!, possibly because we cap at 100, then it drops to 99 but we only write the first to chars to the file resulting in 990?

- disable menu in launcher in simple mode
- disable sleep so I can test battery icon

- try removing 3x scaler, bumping to 4x where 3x is requested or down to 2x if 4x is too large

- BUG: repo doesn't checkout correct branch for submodules when cloned...
	tried but didn't work
		git submodule set-branch -b miniui-miyoomini third-party/picoarch
	maybe
		https://stackoverflow.com/questions/1777854/how-can-i-specify-a-branch-tag-when-adding-a-git-submodule/18799234#18799234

- check me_bind_action in overrides to make sure we're mapping all buttons by name
	eg. gambatte is mapped, pokemini is not
		because pokemini hasn't defined any :face_palm:
		beetle-pce-fast might be looking for the wrong name because it's named mednafen_pce_fast_libretro.so

- picoarch
	check emulator Player Controls for Fast Fwd and remove if present and doesn't work
	see if rewind is easy to add
	integrate cheat support into MiniUI
	truncate the common parts of a group of options, not the (usually unique) ends

- boot logo paks
	don't automatically create hashes in case image is corrupted when checking out repo?
			

	is there a way to consolidate them? I don't like having the same source in two locations
		maybe duped by the makefile?
		need to insert unique md5sums for image1.jpg
		get just the hash
			on Linux
				MD5=($(md5sum ./image1.jpg)); echo $MD5 
			on macOS
				md5 -q ./image1.jpg

- BUG: Sega CD might need a short delay to resume audio like pokemini
	https://github.com/shauninman/picoarch/blob/miniui-miyoomini/patches/pokemini/0001-fix-resume-audio.patch

- faqs
- document auto.sh
	- can `trap "sync && reboot" EXIT` or similar be used to catch errors in auto.sh and prevent stock from polluting the SD card?
	trap "sync && reboot && sleep 10" ERR && set -E # NO
	see https://stackoverflow.com/questions/29427364/non-bash-equivalent-to-trap-err
	eggs: It should be noted that in the new FW, reboot will terminate and continue to run for some time afterwards.

- can picoarch detect if a core supports save states?
	StupidHoroscope: From my messing around with it, there's a method in libretro cores called retro_serialize_size(), and if that returns zero, save-states aren't supported.
	https://docs.libretro.com/development/cores/developing-cores/#retro_serialize_size-retro_serialize-and-retro_unserialize 

- BUG: say doesn't seem to respect extra line returns at end of msg

- BUG: I think show et al need to make sure pan is set to 0,0?
	using after progressui sometimes results in the image not showing

- use smsplus-gx for SMS/GG?
- look into supafaust
	is it just the new hotness or an actual improvement over snes9x
	it might have MSU-1 support, which, eh, is fine for extras but not essential


- look into an audioserver-like approach to eliminating pop
	- I think picoarch already has a resampler...

- BUG: default st8 assumes first disc on multi-disc games
	- leaving for now

- scroll long names
	ugh, this will be harder than it needs to be because of the old Union cross-platform separation
- press L on a save state to lock/unlock it? to make it the default state to open instead of a cold launch?


- do another pass at defaults?
	
- help entry for confirm is inaccessible (args are optional so there's no good way to provide without testing for something like -h or --help)
- auto-adjust brightness based on screen effect?

change all logging from &> log to > log 2>&1

- show, confirm, and say don't sleep (neither does Files.pak)
	thinking face
