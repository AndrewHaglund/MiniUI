-------------------------------

Please see the README.txt in the zip file for installation and update instructions.

- fixed audio popping when run on the 20220419 official firmware or later (thanks eggs!)
- fixed potential slowdowns caused by custom SDL audio implementation (thanks eggs!)
- fixed PlayStation frameskip
- fixed crash in German version of Pokemon FireRed (thanks d30r!)
- fixed post-boot logo graphical glitches (may also require running the Fix Boot Graphics Glitch.pak from the extras zip)
- fixed display name generation for folders with periods in their name
- updated Genesis picodrive core to irixxxx's version for Vectorman fix (possibly only temporarily)
- updated Super Nintendo snes9x2005_plus core to libretro version
- updated button names in Advanced > Options > Player controls (PokÃ©mon mini, Game Boy Advance, TurboGrafx-16)
- updated picoarch to warn when a core doesn't support save states, auto-poweroff, or quicksave and resume
- updated libmmenu to visually disable Save and Load if the core does not support save states
- added warn binary to use when a native game doesn't support save states, auto-poweroff, or quicksave and resume
- added Native Games to extras Roms, includes Cave Story and VVVVVV (both BYOD of course, see their individual readmes)
- added new SFC.pak to extras (this will replace the default Super Nintendo emulator in a future update to MiniUI)

-------------------------------

===============================
upload v0.0.3 to github release
add libvorbis and libmad to non-arm miyoomini-toolchain-buildroot
and upload comparable v0.0.3 there too
for now I'm running the toolchain with a local v0.0.3 for vvvvvv
===============================

- refactor picoarch
	- add separate src and cores directories to simplify searching the source
	
- snes9x frameskip interval isn't hooked up to anything?
	- restore auto frameskip (I've only observed an adverse effect with auto on SotN on PSX)

- script checking core repos for newer commits?
- add -base to end of main MiniUI zip file name for proper sorting in github releases

- look at the way eggs clockd works and see if we can do something similar to add libmmenu to standalones
	- launch binary and pass it's pid to standalonemenu which listens for MENU and sends a sig STOP to the previous binary?

- add snes9x2005 non-plus to Extras?

- switch all cores to libretro?

- compare my core build flags to classic_armv7_a7 build flags

- add an Extended Font.pak?

- picoarch
	truncate the common parts of a group of options, not the (usually unique) ends
	see if rewind is easy to add
	integrate cheat support into MiniUI

- look into CamOS and MI_ERRs in MiniUI and picoarch
	- probably tied to both settings and SDL trying to restore audio volume?
	- add logging to try to bookend the errors to identify their source then untangle the cause
- look into removing trimui patches from picoarch cores, breaking on latest core commits, see pcsx_rearmed

- add Single-use paks to extras Tools (Add/Remove MiniUI Boot Logo and Update Boot Command)

- BUG: repo doesn't checkout correct branch for submodules when cloned...
	tried but didn't work
		git submodule set-branch -b miniui-miyoomini third-party/picoarch
	maybe
		https://stackoverflow.com/questions/1777854/how-can-i-specify-a-branch-tag-when-adding-a-git-submodule/18799234#18799234

- faqs
- known issues

- document auto.sh
	- can `trap "sync && reboot" EXIT` or similar be used to catch errors in auto.sh and prevent stock from polluting the SD card?
	trap "sync && reboot && sleep 10" ERR && set -E # NO
	see https://stackoverflow.com/questions/29427364/non-bash-equivalent-to-trap-err
	eggs: It should be noted that in the new FW, reboot will terminate and continue to run for some time afterwards.


- BUG: say doesn't seem to respect extra line returns at end of msg

- BUG: I think show et al need to make sure pan is set to 0,0?
	using after progressui sometimes results in the image not showing

- use smsplus-gx for SMS/GG?

- scroll long names
	ugh, this will be harder than it needs to be because of the old Union cross-platform separation
- press L on a save state to lock/unlock it? to make it the default state to open instead of a cold launch?

	
- auto-adjust brightness based on screen effect?

change all logging from &> log to > log 2>&1

- show, confirm, and say don't sleep (neither does Files.pak)
	thinking face
